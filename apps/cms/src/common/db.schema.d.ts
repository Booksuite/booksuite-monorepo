/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/company/{companyId}/housingUnitType/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['HousingUnitTypeController_create']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/housingUnitType/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['HousingUnitTypeController_getByID']
        put?: never
        post?: never
        delete: operations['HousingUnitTypeController_delete']
        options?: never
        head?: never
        patch: operations['HousingUnitTypeController_update']
        trace?: never
    }
    '/company/{companyId}/housingUnitType/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['HousingUnitTypeController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['CompanyController_createCompany']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['CompanyController_getCompanyByID']
        put?: never
        post?: never
        delete: operations['CompanyController_deleteCompany']
        options?: never
        head?: never
        patch: operations['CompanyController_update']
        trace?: never
    }
    '/company/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['CompanyController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/agePolicy': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['AgePolicyController_getByCompanyId']
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch: operations['AgePolicyController_upsert']
        trace?: never
    }
    '/company/{companyId}/reservationConfig': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['ReservationConfigController_getByCompanyId']
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch: operations['ReservationConfigController_upsert']
        trace?: never
    }
    '/company/{companyId}/cancellationPolicy': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['CancellationPolicyController_getByCompanyId']
        put?: never
        post?: never
        delete: operations['CancellationPolicyController_delete']
        options?: never
        head?: never
        patch: operations['CancellationPolicyController_create']
        trace?: never
    }
    '/company/{companyId}/service/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['ServiceController_create']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/service/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['ServiceController_getById']
        put?: never
        post?: never
        delete: operations['ServiceController_delete']
        options?: never
        head?: never
        patch: operations['ServiceController_update']
        trace?: never
    }
    '/company/{companyId}/service/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['ServiceController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/reservation/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['ReservationController_create']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/reservation/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['ReservationController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/reservation/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['ReservationController_getByID']
        put?: never
        post?: never
        delete: operations['ReservationController_delete']
        options?: never
        head?: never
        patch: operations['ReservationController_update']
        trace?: never
    }
    '/facility/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['FacilityController_create']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/facility/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['FacilityController_getById']
        put?: never
        post?: never
        delete: operations['FacilityController_delete']
        options?: never
        head?: never
        patch: operations['FacilityController_update']
        trace?: never
    }
    '/facility/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['FacilityController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/media/upsert': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch: operations['MediaController_upsert']
        trace?: never
    }
    '/company/{companyId}/media/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['MediaController_getByID']
        put?: never
        post?: never
        delete: operations['MediaController_delete']
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/media/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['MediaController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/media/upload': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['MediaController_uploadFiles']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/banner/create': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['BannerController_create']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/company/{companyId}/banner/{id}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['BannerController_getById']
        put?: never
        post?: never
        delete: operations['BannerController_delete']
        options?: never
        head?: never
        patch: operations['BannerController_update']
        trace?: never
    }
    '/company/{companyId}/banner/search': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['BannerController_search']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
}
export type webhooks = Record<string, never>
export interface components {
    schemas: {
        HousingUnitDTO: {
            /** @example 6ba7b810-9dad-11d1-80b4-00c04fd430c8 */
            id: string
            /** @example 204 */
            name: string
        }
        HousingUnitTypeFacilityDTO: {
            /** @example true */
            isFeatured?: boolean
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            facilityId: string
        }
        HousingUnitTypeMediaDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            mediaId: string
            /** @example true */
            isFeatured: boolean
            /** @example 1 */
            order?: number
        }
        HousingUnitTypeCreateDTO: {
            /** @example Deluxe */
            name: string
            /** @example true */
            published: boolean
            /** @example deluxe-suite */
            slug: string
            /** @example a deluxe suite for 2 people */
            shortDescription?: string
            /** @example The Deluxe Suite offers a spacious room with a king-size bed, a private balcony, and premium amenities. */
            description?: string
            /** @example 2 */
            order: number
            /** @example 2 */
            minGuests?: number
            /** @example 6 */
            maxGuests?: number
            /** @example 4 */
            maxAdults?: number
            /** @example 3 */
            maxChildren?: number
            /** @example 300 */
            weekdaysPrice: number
            /** @example 500 */
            weekendPrice: number
            /** @example 50 */
            extraAdultPrice: number
            /** @example 70 */
            chargeExtraAdultHigherThan: number
            housingUnits: components['schemas']['HousingUnitDTO'][]
            facilities: components['schemas']['HousingUnitTypeFacilityDTO'][]
            medias: components['schemas']['HousingUnitTypeMediaDTO'][]
        }
        HousingUnitTypeResponseDTO: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string
            /** @example Deluxe */
            name: string
            /** @example deluxe-suite */
            slug: string
            /** @example a deluxe suite for 2 people */
            shortDescription?: Record<string, never>
            /** @example The Deluxe Suite offers a spacious room with a king-size bed, a private balcony, and premium amenities. */
            description?: Record<string, never>
            /** @example 2 */
            order: number
            /** @example 2 */
            minGuests?: Record<string, never>
            /** @example 6 */
            maxGuests?: Record<string, never>
            /** @example 4 */
            maxAdults?: Record<string, never>
            /** @example 3 */
            maxChildren?: Record<string, never>
            /** @example 300 */
            weekdaysPrice: Record<string, never>
            /** @example 500 */
            weekendPrice: Record<string, never>
            /** @example 50 */
            extraAdultPrice: Record<string, never>
            /** @example 70 */
            chargeExtraAdultHigherThan: number
            /**
             * Format: date-time
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string
            /**
             * Format: date-time
             * @example 2024-01-01T00:00:00.000Z
             */
            updatedAt: string
        }
        HousingUnitResponseDTO: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string
            /** @example Luxury Apartment */
            name: string
            /** @example a12345b6-c789-012d-345e-67890fghijkl */
            housingUnitTypeId: string
            /**
             * Format: date-time
             * @example 2024-02-25T14:48:00.000Z
             */
            createdAt: string
        }
        FacilityResponseDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string
            /**
             * @example COMPANY
             * @enum {string}
             */
            type: 'HOUSING_UNIT_TYPE' | 'COMPANY'
            /**
             * @example GENERAL
             * @enum {string}
             */
            category:
                | 'GENERAL'
                | 'FOOD_AND_BEVERAGES'
                | 'LEISURE_AREAS'
                | 'ACTIVITIES'
                | 'STRUCTURE'
                | 'LANGUAGES_SPOKEN'
                | 'INTERNET'
                | 'SERVICES'
                | 'BED_TYPES'
            /** @example WiFi */
            name: string
            /** @example wifi-icon */
            icon: Record<string, never> | null
        }
        HousingUnitTypeFacilityResponseDTO: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string
            /** @example true */
            isFeatured?: Record<string, never>
            facility: components['schemas']['FacilityResponseDTO']
        }
        MetadataDto: {
            /** @example image/png */
            mimetype: string
        }
        MediaResponseDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string
            /** @example https://example.com/image.jpg */
            url: string
            /** @example 55fa1f18-4cd0-47cb-81ac-414d96e16f3c */
            companyId: string
            metadata: components['schemas']['MetadataDto']
        }
        HousingUnitTypeMediaResponseDTO: {
            /** @example true */
            isFeatured: boolean
            /** @example 1 */
            order: Record<string, never>
            media: components['schemas']['MediaResponseDTO']
        }
        HousingUnitTypeResponseFullDTO: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string
            /** @example Deluxe */
            name: string
            /** @example deluxe-suite */
            slug: string
            /** @example a deluxe suite for 2 people */
            shortDescription?: Record<string, never>
            /** @example The Deluxe Suite offers a spacious room with a king-size bed, a private balcony, and premium amenities. */
            description?: Record<string, never>
            /** @example 2 */
            order: number
            /** @example 2 */
            minGuests?: Record<string, never>
            /** @example 6 */
            maxGuests?: Record<string, never>
            /** @example 4 */
            maxAdults?: Record<string, never>
            /** @example 3 */
            maxChildren?: Record<string, never>
            /** @example 300 */
            weekdaysPrice: Record<string, never>
            /** @example 500 */
            weekendPrice: Record<string, never>
            /** @example 50 */
            extraAdultPrice: Record<string, never>
            /** @example 70 */
            chargeExtraAdultHigherThan: number
            /**
             * Format: date-time
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string
            /**
             * Format: date-time
             * @example 2024-01-01T00:00:00.000Z
             */
            updatedAt: string
            housingUnits: components['schemas']['HousingUnitResponseDTO'][]
            facilities: components['schemas']['HousingUnitTypeFacilityResponseDTO'][]
            medias: components['schemas']['HousingUnitTypeMediaResponseDTO'][]
        }
        PaginationQueryDTO: {
            /**
             * @description The page number
             * @example 1
             */
            page: number
            /**
             * @description The number of items per page
             * @example 10
             */
            itemsPerPage: number
        }
        HousingUnitTypeSearchFilterDTO: {
            /** @example true */
            published: boolean
        }
        HousingUnitTypeOrderByDTO: {
            /** @enum {string} */
            orderBy:
                | 'name'
                | 'description'
                | 'shortDescription'
                | 'housingUnits'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        HousingUnitTypeSearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            filter?: components['schemas']['HousingUnitTypeSearchFilterDTO']
            order?: components['schemas']['HousingUnitTypeOrderByDTO']
        }
        HousingUnitTypePaginatedResponseDTO: {
            items: components['schemas']['HousingUnitTypeResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        CompanySettingsThemeResponseDTO: {
            /** @example 31081fbf-8762-4156-8c0e-f9b4933b1d89 */
            id: string
            /** @default #000000 */
            color: string
        }
        CompanySettingsResponseDTO: {
            /** @example 31081fbf-8762-4156-8c0e-f9b4933b1d89 */
            id: string
            theme?: components['schemas']['CompanySettingsThemeResponseDTO']
        }
        CompanyContactResponseDTO: {
            /**
             * @example phone
             * @enum {string}
             */
            type:
                | 'phone'
                | 'email'
                | 'instagram'
                | 'facebook'
                | 'linkedin'
                | 'x'
            /** @example 00000000000 */
            value: string
        }
        FacilityDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id?: string
            /**
             * @example HOUSING_UNIT_TYPE
             * @enum {string}
             */
            type: 'HOUSING_UNIT_TYPE' | 'COMPANY'
            /**
             * @example GENERAL
             * @enum {string}
             */
            category:
                | 'GENERAL'
                | 'FOOD_AND_BEVERAGES'
                | 'LEISURE_AREAS'
                | 'ACTIVITIES'
                | 'STRUCTURE'
                | 'LANGUAGES_SPOKEN'
                | 'INTERNET'
                | 'SERVICES'
                | 'BED_TYPES'
            /** @example WiFi */
            name: string
            /** @example wifi-icon */
            icon?: Record<string, never>
        }
        CompanyFacilityResponseDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /**
             * Format: date-time
             * @example 2025-02-28T12:30:00.000Z
             */
            updatedAt: string
            facility: components['schemas']['FacilityDTO']
        }
        CompanyResponseFullDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /** @example Company name */
            name: string
            /** @example true */
            published: boolean
            /** @example Company simplified name */
            slug: string
            /** @example Company short Description */
            shortDescription?: Record<string, never>
            /** @example Company Description */
            description?: Record<string, never>
            /** @example Timezone */
            timezone?: Record<string, never>
            /** @example LogoURL */
            logo?: Record<string, never>
            /** @example Favicon */
            favIcon?: Record<string, never>
            /** @example Person responsible */
            responsible: string
            /** @example Responsible email address */
            responsibleEmail?: Record<string, never>
            /** @example Responsible phone number */
            responsiblePhone?: Record<string, never>
            /** @example Document Type */
            docType: string
            /** @example Responsible identification */
            identification: string
            /** @example Company legal name */
            companyName: string
            /** @example State registration */
            stateRegistration?: Record<string, never>
            /** @example Municipal registration */
            municipalRegistration?: Record<string, never>
            /** @example Street */
            address: string
            /** @example Number */
            number: string
            /** @example Country */
            country: string
            /** @example State */
            state: string
            /** @example City */
            city: string
            settings?: components['schemas']['CompanySettingsResponseDTO']
            /** @default [
             *       {
             *         "type": "phone",
             *         "value": "00000000000"
             *       }
             *     ] */
            contacts: components['schemas']['CompanyContactResponseDTO'][]
            facilities: components['schemas']['CompanyFacilityResponseDTO'][]
        }
        CompanyOrderByDTO: {
            /** @enum {string} */
            orderBy:
                | 'name'
                | 'shortDescription'
                | 'description'
                | 'companyName'
                | 'state'
                | 'city'
                | 'user'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        CompanySearchFilterDTO: {
            /** @example true */
            published?: boolean
            /** @example 8e5a06a3-da2e-4edc-8a54-bea322cb10b1 */
            userId?: string
        }
        CompanySettingsThemeDTO: {
            /** @default #000000 */
            color: string
        }
        CompanySettingsDTO: {
            theme?: components['schemas']['CompanySettingsThemeDTO']
        }
        CompanyContactDTO: {
            /**
             * @example phone
             * @enum {string}
             */
            type:
                | 'phone'
                | 'email'
                | 'instagram'
                | 'facebook'
                | 'linkedin'
                | 'x'
            /** @example 00000000000 */
            value: string
        }
        CompanyFacilityDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            facilityId: string
        }
        CompanyCreateDTO: {
            /** @example Company name */
            name: string
            /** @example true */
            published: boolean
            /** @example Company simplified name */
            slug: string
            /** @example Company short Description */
            shortDescription?: string
            /** @example Company Description */
            description?: string
            /** @example Timezone */
            timezone?: string
            /** @example LogoURL */
            logo?: string
            /** @example Favicon */
            favIcon?: string
            settings?: components['schemas']['CompanySettingsDTO']
            /** @default [
             *       {
             *         "type": "phone",
             *         "value": "00000000000"
             *       }
             *     ] */
            contacts: components['schemas']['CompanyContactDTO'][]
            /** @example Person resposible */
            responsible: string
            /** @example Resposible email address */
            responsibleEmail?: string
            /** @example Resposible phone number */
            responsiblePhone?: string
            /** @example Resposible identification */
            identification: string
            /** @example Company legal name */
            companyName: string
            /** @example State registration */
            stateRegistration?: string
            /** @example Municipal registration */
            municipalRegistration?: string
            /** @example Street */
            address: string
            /** @example Number */
            number: string
            /** @example Country */
            country: string
            /** @example State */
            state: string
            facilities: components['schemas']['CompanyFacilityDTO'][]
            /** @example City */
            city: string
        }
        CompanyResponseDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /** @example Company name */
            name: string
            /** @example true */
            published: boolean
            /** @example Company simplified name */
            slug: string
            /** @example Company short Description */
            shortDescription?: Record<string, never>
            /** @example Company Description */
            description?: Record<string, never>
            /** @example Timezone */
            timezone?: Record<string, never>
            /** @example LogoURL */
            logo?: Record<string, never>
            /** @example Favicon */
            favIcon?: Record<string, never>
            /** @example Person responsible */
            responsible: string
            /** @example Responsible email address */
            responsibleEmail?: Record<string, never>
            /** @example Responsible phone number */
            responsiblePhone?: Record<string, never>
            /** @example Document Type */
            docType: string
            /** @example Responsible identification */
            identification: string
            /** @example Company legal name */
            companyName: string
            /** @example State registration */
            stateRegistration?: Record<string, never>
            /** @example Municipal registration */
            municipalRegistration?: Record<string, never>
            /** @example Street */
            address: string
            /** @example Number */
            number: string
            /** @example Country */
            country: string
            /** @example State */
            state: string
            /** @example City */
            city: string
        }
        CompanySearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            order?: components['schemas']['CompanyOrderByDTO']
            filter?: components['schemas']['CompanySearchFilterDTO']
        }
        CompanyResponsePaginatedDTO: {
            items: components['schemas']['CompanyResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        AgePolicyResponseDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /** @example true */
            acceptChildren: boolean
            /** @example 12 */
            adultMinAge: number
        }
        AgeGroupDTO: {
            /** @example e95517fb-b3bb-492f-b605-d289704cde0e */
            id?: string
            /** @example 0 */
            initialAge: number
            /** @example 12 */
            finalAge: number
            /**
             * @example DAILY_PERCENTAGE_PER_CHILDREN
             * @enum {string}
             */
            chargeType:
                | 'DAILY_PER_CHILDREN'
                | 'DAILY_PERCENTAGE_PER_CHILDREN'
                | 'FREE'
            /** @example 50 */
            value?: Record<string, never>
        }
        AgePolicyDTO: {
            /** @example true */
            acceptChildren: boolean
            /** @example 12 */
            adultMinAge: number
            ageGroups: components['schemas']['AgeGroupDTO'][]
        }
        AgeGroupResponseDTO: {
            /** @example e95517fb-b3bb-492f-b605-d289704cde0e */
            id: string
            /** @example 0 */
            initialAge: number
            /** @example 12 */
            finalAge: number
            /**
             * @example DAILY_PERCENTAGE_PER_CHILDREN
             * @enum {string}
             */
            chargeType:
                | 'DAILY_PER_CHILDREN'
                | 'DAILY_PERCENTAGE_PER_CHILDREN'
                | 'FREE'
            /** @example 50 */
            value?: Record<string, never>
        }
        AgePolicyResponseFullDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /** @example true */
            acceptChildren: boolean
            /** @example 12 */
            adultMinAge: number
            ageGroups: components['schemas']['AgeGroupResponseDTO'][]
        }
        ReservationConfigResponseDTO: {
            /** @example 0094887f-a46b-4e18-8f53-e05f143e447 */
            id: string
            /**
             * @description Percentage added at the end of purchase
             * @example 5
             */
            tax: Record<string, never>
            /**
             * @example PERCENTAGE_ON_RESERVATION
             * @enum {string}
             */
            reservationDepositType:
                | 'PERCENTAGE_ON_RESERVATION'
                | 'FULL_AMOUNT_ON_RESERVATION'
                | 'DAYLIES_FULL_AMOUNT_ON_RESERVATION'
                | 'FIRST_DAYLY_ON_RESERVATION'
                | 'NO_CHARGE'
            /** @example 50 */
            reservationDepositTypeValue: Record<string, never>
            /** @example Reservation Policy, big text. */
            reservationPolicy: string
        }
        ReservationConfigDTO: {
            /**
             * @description Percentage added at the end of purchase
             * @example 5
             */
            tax: number
            /**
             * @example PERCENTAGE_ON_RESERVATION
             * @enum {string}
             */
            reservationDepositType:
                | 'PERCENTAGE_ON_RESERVATION'
                | 'FULL_AMOUNT_ON_RESERVATION'
                | 'DAYLIES_FULL_AMOUNT_ON_RESERVATION'
                | 'FIRST_DAYLY_ON_RESERVATION'
                | 'NO_CHARGE'
            /** @example 50 */
            reservationDepositTypeValue: number
            /** @example Reservation Policy, big text. */
            reservationPolicy: string
        }
        PenaltyRangeResponseDTO: {
            /**
             * @description Only defined if exists in the DB
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id?: string
            /** @example 10 */
            daysBeforeCheckIn: number
            /**
             * @example RESERVATION_PERCENTAGE
             * @enum {string}
             */
            penaltyBy:
                | 'RESERVATION_PERCENTAGE'
                | 'FULL_DAILIES_PERCENTAGE'
                | 'FIRST_NIGHT_AMOUNT'
            /** @example 20 */
            value: number
        }
        CancellationPolicyResponseFullDTO: {
            /** @example bcd82497-2cc3-4998-b3d9-99db2f56b159 */
            id: string
            /** @example Check-out min days */
            text: string
            /**
             * @example FIRST_NIGHT_AMOUNT
             * @enum {string}
             */
            defaultPenaltyBy:
                | 'RESERVATION_PERCENTAGE'
                | 'FULL_DAILIES_PERCENTAGE'
                | 'FIRST_NIGHT_AMOUNT'
            /** @description Only defined if penalty is not FIRST_NIGHT_AMOUNT */
            defaultValue: number
            penaltyRanges: components['schemas']['PenaltyRangeResponseDTO'][]
        }
        PenaltyRangeDTO: {
            /**
             * @description Only defined if exists in the DB
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id?: string
            /** @example 10 */
            daysBeforeCheckIn: number
            /**
             * @example RESERVATION_PERCENTAGE
             * @enum {string}
             */
            penaltyBy:
                | 'RESERVATION_PERCENTAGE'
                | 'FULL_DAILIES_PERCENTAGE'
                | 'FIRST_NIGHT_AMOUNT'
            /** @example 20 */
            value: number
        }
        CancellationPolicyDTO: {
            /**
             * @example FIRST_NIGHT_AMOUNT
             * @enum {string}
             */
            defaultPenaltyBy:
                | 'RESERVATION_PERCENTAGE'
                | 'FULL_DAILIES_PERCENTAGE'
                | 'FIRST_NIGHT_AMOUNT'
            /** @description Only defined if penalty is not FIRST_NIGHT_AMOUNT */
            defaultValue: number
            penaltyRanges: components['schemas']['PenaltyRangeDTO'][]
        }
        ServiceMediaResponseDTO: {
            /** @example 8c8ab0cb-7689-4357-b446-1348cfe3842d */
            id: string
            /** @example 1 */
            order: Record<string, never>
            media: components['schemas']['MediaResponseDTO'][]
        }
        ServiceCategoryResponseDTO: {
            /** @example d68ffa59-0c42-49a6-b6d8-312569e33505 */
            id: string
            /** @example relaxing */
            name: string
        }
        ServiceResponseFullDTO: {
            /** @example M8c8ab0cb-7689-4357-b446-1348cfe3842d */
            id: string
            /** @example Massage */
            name: string
            /** @example true */
            published: boolean
            /** @example PER_PERSON */
            billType: string
            /** @example 200 */
            price: number
            /** @example 3 */
            adults: number
            /** @example 1 */
            minDaily: number
            /** @example 1 */
            minNotice: number
            /** @example true */
            onlineSale: boolean
            /** @example false */
            panelSale: boolean
            /** @example true */
            seasonalSale: boolean
            /**
             * Format: date-time
             * @example 2025-02-21T14:30:00.000Z
             */
            seasonStart: string
            /**
             * Format: date-time
             * @example 2025-02-22T14:30:00.000Z
             */
            seasonEnd: string
            /** @example Enjoy a soothing massage during your stay */
            description: string
            /** @example Free Wi-Fi, Breakfast, Swimming Pool Access */
            included: string
            /** @example Seasonal availability, blackout dates apply. */
            notes: string
            /** @example https://www.example.com/video */
            videoUrl?: Record<string, never>
            medias: components['schemas']['ServiceMediaResponseDTO'][]
            category: components['schemas']['ServiceCategoryResponseDTO'] | null
        }
        ServiceMediaCreateDTO: {
            /** @example 1 */
            order: Record<string, never>
            /** @example 8c8ab0cb-7689-4357-b446-1348cfe3842d */
            mediaId: string
        }
        ServiceCategoryDTO: {
            /** @example 3c39db8f-ec01-4bf1-89e3-a4b458903b2c */
            id: string
            /** @example relaxing */
            name: string
        }
        ServiceCreateDTO: {
            /** @example massage */
            name: string
            /** @example true */
            published: boolean
            /** @example PER_PERSON */
            billType: string
            /** @example 200 */
            price: number
            /** @example 3 */
            adults: number
            /** @example 1 */
            minDaily: number
            /** @example 1 */
            minNotice: number
            /** @example true */
            onlineSale: boolean
            /** @example false */
            panelSale: boolean
            /** @example true */
            seasonalSale: boolean
            /** @example 2025-02-21T14:30:00.000Z */
            seasonStart: string
            /** @example 2025-02-22T14:30:00.000Z */
            seasonEnd: string
            /** @example Enjoy a soothing massage during your stay */
            description: string
            /** @example Free Wi-Fi, Breakfast, Swimming Pool Access */
            included: string
            /** @example Seasonal availability, blackout dates apply. */
            notes: string
            /** @example https://www.example.com/video */
            videoUrl?: string
            medias: components['schemas']['ServiceMediaCreateDTO'][]
            category: components['schemas']['ServiceCategoryDTO'][]
        }
        ServiceResponseDTO: {
            /** @example M8c8ab0cb-7689-4357-b446-1348cfe3842d */
            id: string
            /** @example Massage */
            name: string
            /** @example true */
            published: boolean
            /** @example PER_PERSON */
            billType: string
            /** @example 200 */
            price: number
            /** @example 3 */
            adults: number
            /** @example 1 */
            minDaily: number
            /** @example 1 */
            minNotice: number
            /** @example true */
            onlineSale: boolean
            /** @example false */
            panelSale: boolean
            /** @example true */
            seasonalSale: boolean
            /**
             * Format: date-time
             * @example 2025-02-21T14:30:00.000Z
             */
            seasonStart: string
            /**
             * Format: date-time
             * @example 2025-02-22T14:30:00.000Z
             */
            seasonEnd: string
            /** @example Enjoy a soothing massage during your stay */
            description: string
            /** @example Free Wi-Fi, Breakfast, Swimming Pool Access */
            included: string
            /** @example Seasonal availability, blackout dates apply. */
            notes: string
            /** @example https://www.example.com/video */
            videoUrl?: Record<string, never>
        }
        ServiceSearchFilterDTO: {
            /** @example true */
            published?: boolean
        }
        ServiceOrderByDTO: {
            /** @enum {string} */
            orderBy: 'name' | 'description' | 'included' | 'notes'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        ServiceSearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            filter?: components['schemas']['ServiceSearchFilterDTO']
            order?: components['schemas']['ServiceOrderByDTO']
        }
        ServicePaginatedResponseDTO: {
            items: components['schemas']['ServiceResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        ReservationServiceResponseDTO: {
            /** @example f47ac10b-58cc-4372-a567-0e02b2c3d479 */
            id: string
            /** @example 2 */
            qtd: number
            /** @example 250 */
            totalPrice: number
            service: components['schemas']['ServiceResponseDTO']
        }
        UserResponseDTO: {
            /** @example user@gmail.com */
            email: string
            /** @example user */
            firstName: string
            /** @example user */
            lastName: Record<string, never> | null
            /** @example 489831034 */
            phone: Record<string, never> | null
            /** @example 123 */
            password: string
            /** @example {preferences: {notifications: true} */
            metaData?: Record<string, never> | null
        }
        ReservationResponseFullDTO: {
            /**
             * @example CONFIRMED
             * @enum {string}
             */
            status:
                | 'WAITING_PAYMENT'
                | 'CONFIRMED'
                | 'CHECKED_IN'
                | 'CHECKED_OUT'
                | 'ABANDONED'
                | 'CANCELLED'
                | 'PAYMENT_FAILED'
                | 'OVERBOOKED'
                | 'WAITING_LIST'
            /**
             * @example BOOKSUITE
             * @enum {string}
             */
            saleChannel?:
                | 'RECEPTION'
                | 'PHONE'
                | 'WHATSAPP'
                | 'INSTAGRAM'
                | 'TIKTOK'
                | 'EMAIL'
                | 'BOOKSUITE'
                | 'OTHER'
            /**
             * Format: date-time
             * @example 2024-10-17T13:19:15.271634Z
             */
            startDate: string
            /**
             * Format: date-time
             * @example 2025-01-14T13:19:15.271598Z
             */
            endDate: string
            /** @example 7 */
            totalDays: Record<string, never>
            /** @example 2 */
            adults: Record<string, never>
            /** @example 1 */
            children: Record<string, never>
            /** @example Featured booking */
            notes: string
            /**
             * Format: date-time
             * @example 2024-07-19T13:19:15.271637Z
             */
            createdAt: string
            /**
             * Format: date-time
             * @example 2024-07-29T13:19:15.271631Z
             */
            updatedAt: string
            housingUnit: components['schemas']['HousingUnitResponseDTO']
            services: components['schemas']['ReservationServiceResponseDTO'][]
            guestUser: components['schemas']['UserResponseDTO'] | null
            sellerUser: components['schemas']['UserResponseDTO'] | null
        }
        ReservationServiceCreateDTO: {
            /** @example 150 */
            totalPrice: number
            /** @example f47ac10b-58cc-4372-a567-0e02b2c3d479 */
            serviceId: string
        }
        ReservationCreateDTO: {
            /**
             * @example CONFIRMED
             * @enum {string}
             */
            status:
                | 'WAITING_PAYMENT'
                | 'CONFIRMED'
                | 'CHECKED_IN'
                | 'CHECKED_OUT'
                | 'ABANDONED'
                | 'CANCELLED'
                | 'PAYMENT_FAILED'
                | 'OVERBOOKED'
                | 'WAITING_LIST'
            /** @example f47ac10b-58cc-4372-a567-0e02b2c3d479 */
            userId: string
            /** @example f47ac10b-58cc-4372-a567-0e02b2c3d479 */
            sellerUserId: string
            /**
             * @example BOOKSUITE
             * @enum {string}
             */
            saleChannel?:
                | 'RECEPTION'
                | 'PHONE'
                | 'WHATSAPP'
                | 'INSTAGRAM'
                | 'TIKTOK'
                | 'EMAIL'
                | 'BOOKSUITE'
                | 'OTHER'
            /**
             * Format: date-time
             * @example 2025-01-14T13:19:15.271598Z
             */
            startDate: string
            /**
             * Format: date-time
             * @example 2024-10-10T13:19:15.271627Z
             */
            endDate: string
            /** @example 7 */
            totalDays: number
            /** @example 2 */
            adults: number
            /** @example 1 */
            children: number
            /** @example Featured booking */
            notes: string
            /** @example f47ac10b-58cc-4372-a567-0e02b2c3d479 */
            housingUnitId: string
            services: components['schemas']['ReservationServiceCreateDTO'][]
        }
        ReservationResponseDTO: {
            /**
             * @example CONFIRMED
             * @enum {string}
             */
            status:
                | 'WAITING_PAYMENT'
                | 'CONFIRMED'
                | 'CHECKED_IN'
                | 'CHECKED_OUT'
                | 'ABANDONED'
                | 'CANCELLED'
                | 'PAYMENT_FAILED'
                | 'OVERBOOKED'
                | 'WAITING_LIST'
            /**
             * @example BOOKSUITE
             * @enum {string}
             */
            saleChannel?:
                | 'RECEPTION'
                | 'PHONE'
                | 'WHATSAPP'
                | 'INSTAGRAM'
                | 'TIKTOK'
                | 'EMAIL'
                | 'BOOKSUITE'
                | 'OTHER'
            /**
             * Format: date-time
             * @example 2024-10-17T13:19:15.271634Z
             */
            startDate: string
            /**
             * Format: date-time
             * @example 2025-01-14T13:19:15.271598Z
             */
            endDate: string
            /** @example 7 */
            totalDays: Record<string, never>
            /** @example 2 */
            adults: Record<string, never>
            /** @example 1 */
            children: Record<string, never>
            /** @example Featured booking */
            notes: string
            /**
             * Format: date-time
             * @example 2024-07-19T13:19:15.271637Z
             */
            createdAt: string
            /**
             * Format: date-time
             * @example 2024-07-29T13:19:15.271631Z
             */
            updatedAt: string
        }
        DateRangeDTO: {
            /**
             * Format: date
             * @example 2025-03-01T00:00:00Z
             */
            start: string
            /**
             * Format: date
             * @example 2025-03-14T00:00:00Z
             */
            end: string
        }
        ReservationSearchFilterDTO: {
            /** @enum {string} */
            saleChannel?:
                | 'RECEPTION'
                | 'PHONE'
                | 'WHATSAPP'
                | 'INSTAGRAM'
                | 'TIKTOK'
                | 'EMAIL'
                | 'BOOKSUITE'
                | 'OTHER'
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            sellerUserId?: string
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            userId?: string
            startDate?: components['schemas']['DateRangeDTO']
            endDate?: components['schemas']['DateRangeDTO']
            createdDate?: components['schemas']['DateRangeDTO']
            /** @enum {string} */
            status?:
                | 'WAITING_PAYMENT'
                | 'CONFIRMED'
                | 'CHECKED_IN'
                | 'CHECKED_OUT'
                | 'ABANDONED'
                | 'CANCELLED'
                | 'PAYMENT_FAILED'
                | 'OVERBOOKED'
                | 'WAITING_LIST'
        }
        ReservationOrderByDTO: {
            /** @enum {string} */
            orderBy:
                | 'createdAt'
                | 'updatedAt'
                | 'status'
                | 'startDate'
                | 'endDate'
                | 'totalDays'
                | 'adults'
                | 'children'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        ReservationSearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            filter?: components['schemas']['ReservationSearchFilterDTO']
            order?: components['schemas']['ReservationOrderByDTO']
        }
        ReservationResponsePaginatedDTO: {
            items: components['schemas']['ReservationResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        FacilityOrderByDTO: {
            /**
             * @example name
             * @enum {string}
             */
            orderBy: 'name' | 'createdAt' | 'updatedAt'
            /**
             * @example asc
             * @enum {string}
             */
            order: 'asc' | 'desc'
        }
        FacilitySearchFilterDTO: {
            /**
             * @example COMPANY
             * @enum {string}
             */
            type: 'HOUSING_UNIT_TYPE' | 'COMPANY'
        }
        FacilitySearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            order?: components['schemas']['FacilityOrderByDTO']
            filter?: components['schemas']['FacilitySearchFilterDTO']
        }
        FacilityResponsePaginatedDTO: {
            items: components['schemas']['FacilityResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        MediaDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id?: string
            /** @example https://example.com/image.jpg */
            url: string
            /** @example 55fa1f18-4cd0-47cb-81ac-414d96e16f3c */
            companyId: string
            metadata: components['schemas']['MetadataDto']
        }
        MediaOrderByDTO: {
            /** @enum {string} */
            orderBy: 'url' | 'createdAt'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        MediaSearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            order?: components['schemas']['MediaOrderByDTO']
        }
        MediaResponsePaginatedDTO: {
            items: components['schemas']['MediaResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
        BannerMediaResponseDTO: {
            /** @example 2 */
            order?: Record<string, never>
            media: components['schemas']['MediaResponseDTO']
        }
        BannerResponseFullDTO: {
            /** @example a89f8dc0-4d03-483a-8803-9c4a4c2ab878 */
            id: string
            /** @example true */
            published: boolean
            /** @example Banner name */
            name: string
            /**
             * @example HOME_TOP
             * @enum {string}
             */
            position: 'HOME_TOP' | 'FEATURED_CONTENT'
            /** @example 1 */
            order: Record<string, never>
            /** @example Banner title */
            title?: Record<string, never>
            /** @example Banner description */
            description?: Record<string, never>
            /**
             * @example SMART_SEARCH
             * @enum {string}
             */
            action: 'NONE' | 'SMART_SEARCH' | 'CUSTOM' | 'SEND_TO_WHATSAPP'
            /** @example search */
            actionButtonText?: Record<string, never>
            /** @example https://via.placeholder.com */
            actionButtonLink?: Record<string, never>
            /**
             * @description ISO format
             * @example 2024-03-14T00:00:00Z
             */
            startAt?: Record<string, never>
            /**
             * @description ISO format
             * @example 2025-08-14T23:59:59Z
             */
            endAt?: Record<string, never>
            medias: components['schemas']['BannerMediaResponseDTO'][]
        }
        BannerMediaDTO: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            mediaId: string
            /** @example 2 */
            order?: number
        }
        BannerCreateDTO: {
            /** @example Banner name */
            name: string
            /** @example true */
            published: boolean
            /**
             * @example HOME_TOP
             * @enum {string}
             */
            position: 'HOME_TOP' | 'FEATURED_CONTENT'
            /** @example 1 */
            order: number
            /** @example Banner title */
            title?: string
            /** @example Banner description */
            description?: string
            /**
             * @example SMART_SEARCH
             * @enum {string}
             */
            action: 'NONE' | 'SMART_SEARCH' | 'CUSTOM' | 'SEND_TO_WHATSAPP'
            /** @example search */
            actionButtonText?: string
            /** @example https://via.placeholder.com */
            actionButtonLink?: string
            medias: components['schemas']['BannerMediaDTO'][]
            /**
             * @description ISO format
             * @example 2024-03-14T00:00:00Z
             */
            startAt?: string
            /**
             * @description ISO format
             * @example 2025-08-14T23:59:59Z
             */
            endAt?: string
        }
        BannerResponseDTO: {
            /** @example a89f8dc0-4d03-483a-8803-9c4a4c2ab878 */
            id: string
            /** @example true */
            published: boolean
            /** @example Banner name */
            name: string
            /**
             * @example HOME_TOP
             * @enum {string}
             */
            position: 'HOME_TOP' | 'FEATURED_CONTENT'
            /** @example 1 */
            order: Record<string, never>
            /** @example Banner title */
            title?: Record<string, never>
            /** @example Banner description */
            description?: Record<string, never>
            /**
             * @example SMART_SEARCH
             * @enum {string}
             */
            action: 'NONE' | 'SMART_SEARCH' | 'CUSTOM' | 'SEND_TO_WHATSAPP'
            /** @example search */
            actionButtonText?: Record<string, never>
            /** @example https://via.placeholder.com */
            actionButtonLink?: Record<string, never>
            /**
             * @description ISO format
             * @example 2024-03-14T00:00:00Z
             */
            startAt?: Record<string, never>
            /**
             * @description ISO format
             * @example 2025-08-14T23:59:59Z
             */
            endAt?: Record<string, never>
        }
        BannerOrderByDTO: {
            /** @enum {string} */
            orderBy: 'position' | 'order' | 'createdAt' | 'updatedAt'
            /** @enum {string} */
            order: 'asc' | 'desc'
        }
        BannerSearchFilterDTO: {
            /** @enum {string} */
            position?: 'HOME_TOP' | 'FEATURED_CONTENT'
        }
        BannerSearchBodyDTO: {
            pagination: components['schemas']['PaginationQueryDTO']
            order?: components['schemas']['BannerOrderByDTO']
            filter?: components['schemas']['BannerSearchFilterDTO']
        }
        BannerResponsePaginatedDTO: {
            items: components['schemas']['BannerResponseDTO'][]
            /** @example 10 */
            totalItems: number
            /** @example 2 */
            totalPages: number
            /** @example 1 */
            currentPage: number
            /** @example 1 */
            prevPage: number | null
            /** @example 2 */
            nextPage: number | null
        }
    }
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
    HousingUnitTypeController_create: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['HousingUnitTypeCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['HousingUnitTypeResponseDTO']
                }
            }
        }
    }
    HousingUnitTypeController_getByID: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['HousingUnitTypeResponseFullDTO']
                }
            }
        }
    }
    HousingUnitTypeController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    HousingUnitTypeController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['HousingUnitTypeCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['HousingUnitTypeResponseDTO']
                }
            }
        }
    }
    HousingUnitTypeController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['HousingUnitTypeSearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['HousingUnitTypePaginatedResponseDTO']
                }
            }
        }
    }
    CompanyController_createCompany: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['CompanyCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['CompanyResponseDTO']
                }
            }
        }
    }
    CompanyController_getCompanyByID: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['CompanyResponseFullDTO']
                        | null
                }
            }
        }
    }
    CompanyController_deleteCompany: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    CompanyController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['CompanyCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['CompanyResponseDTO']
                }
            }
        }
    }
    CompanyController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['CompanySearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['CompanyResponsePaginatedDTO']
                }
            }
        }
    }
    AgePolicyController_getByCompanyId: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['AgePolicyResponseFullDTO']
                        | null
                }
            }
        }
    }
    AgePolicyController_upsert: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['AgePolicyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['AgePolicyResponseFullDTO']
                }
            }
        }
    }
    ReservationConfigController_getByCompanyId: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['ReservationConfigResponseDTO']
                        | null
                }
            }
        }
    }
    ReservationConfigController_upsert: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ReservationConfigDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ReservationConfigResponseDTO']
                }
            }
        }
    }
    CancellationPolicyController_getByCompanyId: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['CancellationPolicyResponseFullDTO']
                        | null
                }
            }
        }
    }
    CancellationPolicyController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    CancellationPolicyController_create: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['CancellationPolicyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['CancellationPolicyResponseFullDTO']
                }
            }
        }
    }
    ServiceController_create: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ServiceCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ServiceResponseDTO']
                }
            }
        }
    }
    ServiceController_getById: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['ServiceResponseFullDTO']
                        | null
                }
            }
        }
    }
    ServiceController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    ServiceController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ServiceCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ServiceResponseDTO']
                }
            }
        }
    }
    ServiceController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ServiceSearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ServicePaginatedResponseDTO']
                }
            }
        }
    }
    ReservationController_create: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ReservationCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ReservationResponseDTO']
                }
            }
        }
    }
    ReservationController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ReservationSearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ReservationResponsePaginatedDTO']
                }
            }
        }
    }
    ReservationController_getByID: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['ReservationResponseFullDTO']
                        | null
                }
            }
        }
    }
    ReservationController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    ReservationController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['ReservationCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['ReservationResponseDTO']
                }
            }
        }
    }
    FacilityController_create: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['FacilityDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['FacilityResponseDTO']
                }
            }
        }
    }
    FacilityController_getById: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['FacilityResponseDTO']
                        | null
                }
            }
        }
    }
    FacilityController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    FacilityController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['FacilityDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['FacilityResponseDTO']
                }
            }
        }
    }
    FacilityController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['FacilitySearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['FacilityResponsePaginatedDTO']
                }
            }
        }
    }
    MediaController_upsert: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['MediaDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['MediaResponseDTO']
                }
            }
        }
    }
    MediaController_getByID: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['MediaResponseDTO']
                }
            }
        }
    }
    MediaController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    MediaController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['MediaSearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['MediaResponsePaginatedDTO']
                }
            }
        }
    }
    MediaController_uploadFiles: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['MediaResponseDTO']
                }
            }
        }
    }
    BannerController_create: {
        parameters: {
            query?: never
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['BannerCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['BannerResponseDTO']
                }
            }
        }
    }
    BannerController_getById: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json':
                        | components['schemas']['BannerResponseFullDTO']
                        | null
                }
            }
        }
    }
    BannerController_delete: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    BannerController_update: {
        parameters: {
            query?: never
            header?: never
            path: {
                id: string
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['BannerCreateDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['BannerResponseDTO']
                }
            }
        }
    }
    BannerController_search: {
        parameters: {
            query?: {
                query?: string
            }
            header?: never
            path: {
                companyId: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': components['schemas']['BannerSearchBodyDTO']
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': components['schemas']['BannerResponsePaginatedDTO']
                }
            }
        }
    }
}
